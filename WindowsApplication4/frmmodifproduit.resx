<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAeAB4AAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYa
        HSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAFLAZADASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6pooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACimyyJFGXkdUQdWY4AqJL
        u2b7txCfo4oAnopAwYZUgj2paACiiigAooooAKKKKACiiigAoozRQAUUUUAFFFFABRRRQAUUUUAFFFFA
        BRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQBHcQx3EEkMy
        K8cgKsrDIIPavPda0E6dcZUFoXPyP3+hr0aorq3juYjHKoZDQB5YLQK2VQK3rjmpFa6jH7q5uI+/ySsv
        8jXS6hpLWrnGWjPRqz3t8KRj0oAyReakGwL65Jz1MpNPXVNWX7uoXGfc5/nV1Lbgkj1NRtAMsccUwK51
        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
        kY9azpbfbM0WUEy8NG42sh9CDyPxxTDFOqkjdnPJBzXPzR66GvKbUUxk6g/j0ri/ifMVs7OJcYkZiR9M
        D+prZW6lhkxKSR2BrmvHiSXT6af4Nzgkf8BP9DVxir3CxhWPy2i4Jxz1r6A/ZxsZIPCGo3sqjbe6g7Qt
        3MaKqYP/AANZPzrwO6HlQFVwpAwB7V9OfBS3+z/DDQlByJI3mB9d8jPn/wAer0MErzcjmxTtCx29FFFe
        meeFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUU
        UUAFFFFABRRRQAUUUUAFFFFABQaKKACiiigDL1nQtO1qNE1SzguQhJjLr80ZPUq3VSfY15/rHw1urR5J
        vDt+ZEZt32S9YkKPRJBzxz94MSTywr1SkIz1rGrQhVVpI0hVnD4WfPF+LrTbr7HrlnJaSnG0yLuVx6hx
        8p/Dp3xWbr9rDd6XI9uUZoW8wfgDnH4Z/Kvo7U9NstTs3tdRtILq2fBaKZA6kg5BwfQ8j0ryfxZ8Lri3
        lmvPCcoMDfMdMnchemNsbn15wGOATjIGAPOqZfKGsHdHZTxUZaS0PnnWbyWRmSHnaCcAdT6Yr7Z8N6XF
        onh/TdKt2Lw2NtHbIzdWCKFBPvxXzd4L+Fus6n4uU39hc6Zo9tKsry3AAaVQwPlKOpz0LYAwCQeRX1Cv
        eu3Cw5Y3aMMTJNpJi0UUV1HMFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRR
        RQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRR
        RQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRR
        RQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRR
        RQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRR
        RQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRR
        RQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRR
        RQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRR
        RQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRR
        RQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRR
        RQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRR
        RQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAf//Z
</value>
  </data>
</root>